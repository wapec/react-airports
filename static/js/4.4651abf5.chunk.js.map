{"version":3,"sources":["components/_common/Map/Map.module.scss","components/_common/SearchInput/SearchInput.module.scss","components/Main/SearchAirport/SearchAirport.module.scss","components/Main/Main.module.scss","config/mapConfig.ts","components/_common/Map/Map.tsx","components/Main/_redux/mainSelectors.ts","components/_common/SearchInput/_redux/searchSelectors.ts","components/_common/SearchInput/SearchInput.tsx","hooks/useDebounce.ts","components/_common/SearchInput/_redux/searchActions.ts","components/Main/SearchAirport/SearchAirport.tsx","components/Main/Main.tsx","components/Main/_redux/mainActions.ts"],"names":["module","exports","MAP_CONFIG","LeafMap","markers","center","className","Map","zoom","minZoom","maxZoom","clsx","styles","root","TileLayer","attribution","url","isEmpty","map","lat","lng","info","id","Marker","position","key","Popup","mainSelector","state","main","searchSelector","search","memo","list","onResultClick","searchCondition","dispatch","useDispatch","searchResults","useSelector","useState","searchValue","setSearchValue","searchDebounce","value","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","searchAvailabilityFlag","length","onCardClickHandler","e","payload","callback","results","filter","item","condition","toLowerCase","join","includes","type","SET_SEARCH","Input","icon","placeholder","searchInput","transparent","loading","onChange","target","resultsWrapper","Label","resultLabel","attached","size","index","iata","name","country","city","icao","Card","header","meta","description","data-id","onClick","noResults","areEqual","mapCenter","setMapCenter","airportsList","transformForMapMarker","useMemo","forEach","Number","isNaN","searchContainer","airportId","currentTarget","getAttribute","foundAirport","find","GET_AIRPORTS"],"mappings":"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","file":"static/js/4.4651abf5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Map_root__3jXwk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SearchInput_root__38ep4\",\"searchInput\":\"SearchInput_searchInput__ur07s\",\"noResults\":\"SearchInput_noResults__2pdDU\",\"resultsWrapper\":\"SearchInput_resultsWrapper__rkp0R\",\"resultLabel\":\"SearchInput_resultLabel__1G6u-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SearchAirport_root__2CjAk\",\"searchContainer\":\"SearchAirport_searchContainer__2jzFw\",\"map\":\"SearchAirport_map__WeABs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Main_root__zd-uY\"};","export const MAP_CONFIG = {\n  zoom: 5,\n  minZoom: 3,\n  maxZoom: 18,\n};\n","import React, { FC } from 'react';\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { isEmpty } from 'ramda';\nimport clsx from 'clsx';\n\nimport { MAP_CONFIG } from '../../../config/mapConfig';\nimport { IMarker, IPosition } from '../../Main/_models/mapModel';\n\nimport styles from './Map.module.scss';\n\ninterface IOwnProps {\n  markers: IMarker[];\n  center: IPosition;\n  className?: string;\n}\n\ntype Props = IOwnProps;\n\nconst LeafMap: FC<Props> = ({ markers, center, className }) => {\n  return (\n    <Map\n      center={center}\n      zoom={MAP_CONFIG.zoom}\n      minZoom={MAP_CONFIG.minZoom}\n      maxZoom={MAP_CONFIG.maxZoom}\n      className={clsx(styles.root, className)}\n    >\n      <TileLayer\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.osm.org/{z}/{x}/{y}.png\"\n      />\n      {!isEmpty(markers) &&\n        markers.map(({ lat, lng, info, id }: IMarker) => (\n          <Marker position={{ lat, lng }} key={id}>\n            <Popup>{info}</Popup>\n          </Marker>\n        ))}\n    </Map>\n  );\n};\n\nexport default LeafMap;\n","import { AppState } from '../../../redux/store';\nimport { IMainReducer } from './mainReducers';\n\nexport const mainSelector = (state: AppState): IMainReducer => state.main;\n","import { AppState } from '../../../../redux/store';\nimport { ISearchReducer } from './searchReducers';\n\nexport const searchSelector = (state: AppState): ISearchReducer => state.search;\n","import React, {\n  FC,\n  memo,\n  ChangeEvent,\n  useState,\n  MouseEvent,\n  useEffect,\n} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Input, Card, Label } from 'semantic-ui-react';\nimport { isEmpty } from 'ramda';\n\nimport { areEqual } from '../../../utils/helpers';\nimport useDebounce from '../../../hooks/useDebounce';\nimport { IAirport } from '../../Main/_models/airportModel';\nimport { setSearchAction } from './_redux/searchActions';\nimport { searchSelector } from './_redux/searchSelectors';\n\nimport styles from './SearchInput.module.scss';\n\ninterface IOwnProps {\n  list: any[];\n  searchCondition: string[];\n  onResultClick: (e: MouseEvent, list: any[]) => void;\n}\n\ntype Props = IOwnProps;\n\nconst SearchInput: FC<Props> = ({ list, onResultClick, searchCondition }) => {\n  const dispatch = useDispatch();\n  const { searchResults } = useSelector(searchSelector);\n  const [searchValue, setSearchValue] = useState('');\n  const searchDebounce = useDebounce(searchValue, 800);\n  const searchAvailabilityFlag =\n    searchValue && searchValue.length >= 3 && searchDebounce;\n\n  const onInputChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n    setSearchValue(value || '');\n  };\n\n  const onCardClickHandler = (e: MouseEvent<HTMLAnchorElement>) => {\n    onResultClick(e, list);\n  };\n\n  useEffect(() => {\n    let results = [];\n    if (searchAvailabilityFlag) {\n      results = list.filter(item =>\n        searchCondition\n          .map(condition => item[condition] && item[condition].toLowerCase())\n          .join(',')\n          .includes(searchValue.toLowerCase()),\n      );\n    }\n    dispatch(setSearchAction(results));\n  }, [searchValue, list, searchAvailabilityFlag, dispatch]);\n\n  return (\n    <div className={styles.root}>\n      <Input\n        icon=\"search\"\n        placeholder=\"Search airport\"\n        className={styles.searchInput}\n        transparent\n        loading={!searchDebounce && !!searchValue}\n        onChange={onInputChangeHandler}\n      />\n      {!isEmpty(searchResults) && (\n        <div className={styles.resultsWrapper}>\n          <Label\n            className={styles.resultLabel}\n            attached=\"top right\"\n            size=\"tiny\"\n          >\n            {searchResults.length}{' '}\n            {searchResults.length > 1 ? 'results' : 'result'}\n          </Label>\n          {searchResults.map(\n            (\n              { iata, name, country, city, icao, id }: IAirport,\n              index: number,\n            ) => (\n              <Card\n                key={index}\n                header={iata}\n                meta={icao}\n                description={`${name} / ${city}, ${country}`}\n                data-id={id}\n                onClick={onCardClickHandler}\n              ></Card>\n            ),\n          )}\n        </div>\n      )}\n      {isEmpty(searchResults) && searchAvailabilityFlag && (\n        <span className={styles.noResults}>No results</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SearchInput, areEqual);\n","import { useState, useEffect } from 'react';\n\nexport default function useDebounce(value: any, delay = 300) {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n","import { SET_SEARCH } from './searchTypes';\n\nexport const setSearchAction = (payload: any[], callback?: () => void) => {\n  return {\n    type: SET_SEARCH,\n    payload,\n    callback,\n  };\n};\n","import React, { FC, memo, useMemo, useState, MouseEvent } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { areEqual } from '../../../utils/helpers';\nimport { IAirport } from '../_models/airportModel';\nimport LeafMap from '../../_common/Map/Map';\nimport { mainSelector } from '../_redux/mainSelectors';\nimport { searchSelector } from '../../_common/SearchInput/_redux/searchSelectors';\nimport { IMarker, IPosition } from '../_models/mapModel';\nimport SearchInput from '../../_common/SearchInput/SearchInput';\n\nimport styles from './SearchAirport.module.scss';\n\ninterface IOwnProps {}\n\ntype Props = IOwnProps;\n\nconst SearchAirport: FC<Props> = () => {\n  const [mapCenter, setMapCenter] = useState<IPosition>({\n    lat: 51.505,\n    lng: -0.09,\n  });\n  const searchCondition = ['iata', 'name', 'country', 'city'];\n\n  const { airportsList } = useSelector(mainSelector);\n  const { searchResults } = useSelector(searchSelector);\n\n  const transformForMapMarker: IMarker[] = useMemo(() => {\n    let markers = [] as IMarker[];\n    searchResults.forEach(({ lat, lng, name, id }: IAirport) => {\n      if (!Number.isNaN(+lat) && !Number.isNaN(+lng))\n        markers = [...markers, { lat: +lat, lng: +lng, info: name, id }];\n    });\n    return markers;\n  }, [searchResults]);\n\n  const onResultClickHandler = (e: MouseEvent, list: any[]) => {\n    const airportId =\n      e.currentTarget && e.currentTarget.getAttribute('data-id');\n    const foundAirport = list.find(item => item.id === airportId);\n    if (foundAirport && foundAirport.lat && foundAirport.lng)\n      setMapCenter({ lat: +foundAirport.lat, lng: +foundAirport.lng });\n  };\n\n  return (\n    <div className={styles.root}>\n      <LeafMap\n        markers={transformForMapMarker}\n        center={mapCenter}\n        className={styles.map}\n      />\n      <div className={styles.searchContainer}>\n        <SearchInput\n          searchCondition={searchCondition}\n          onResultClick={onResultClickHandler}\n          list={airportsList}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SearchAirport, areEqual);\n","import React, { FC, memo, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { areEqual } from '../../utils/helpers';\nimport { getAirportsAction } from './_redux/mainActions';\nimport SearchAirport from './SearchAirport/SearchAirport';\n\nimport styles from './Main.module.scss';\n\ninterface IOwnProps {}\n\ntype Props = IOwnProps;\n\nconst Main: FC<Props> = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAirportsAction());\n  }, [dispatch]);\n\n  return (\n    <div className={styles.root}>\n      <SearchAirport />\n    </div>\n  );\n};\n\nexport default memo(Main, areEqual);\n","import { GET_AIRPORTS } from './mainTypes';\n\nexport const getAirportsAction = (callback?: () => void) => ({\n  type: GET_AIRPORTS,\n  callback,\n});\n"],"sourceRoot":""}