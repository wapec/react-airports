{"version":3,"sources":["components/Main/Map/Map.module.scss","components/Main/Search/Search.module.scss","components/Main/SearchAirport/SearchAirport.module.scss","components/Main/Main.module.scss","config/mapConfig.ts","components/Main/Map/Map.tsx","components/Main/_redux/mainSelectors.ts","components/Main/Search/_redux/searchSelectors.ts","components/Main/Search/Search.tsx","hooks/useDebounce.ts","components/Main/Search/_redux/searchActions.ts","components/Main/SearchAirport/SearchAirport.tsx","components/Main/_helpers/routesHelpers.ts","components/Main/Main.tsx","components/Main/_redux/mainActions.ts"],"names":["module","exports","MAP_CONFIG","LeafMap","markers","center","className","lines","zoom","opacityHandler","lat","lng","Map","minZoom","maxZoom","clsx","styles","root","TileLayer","attribution","url","isEmpty","map","info","id","Marker","position","opacity","key","Popup","line","index","Polyline","positions","mainSelector","state","main","searchSelector","search","memo","list","onResultClick","searchCondition","onIconClick","dispatch","useDispatch","searchResults","useSelector","useState","searchValue","setSearchValue","searchDebounce","value","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","searchAvailabilityFlag","length","onCardClickHandler","e","onIconClickHandler","stopPropagation","payload","callback","results","filter","item","condition","toLowerCase","join","includes","type","SET_SEARCH","Input","icon","placeholder","searchInput","transparent","loading","onChange","target","resultsWrapper","Label","resultLabel","attached","size","iata","name","country","city","icao","Card","header","content","inverted","basic","trigger","popupHeader","onClick","data-id","Icon","meta","description","href","noResults","areEqual","mapCenter","setMapCenter","setZoom","hubAirport","setHubAirport","airportsTo","setAirportsTo","routesLines","setRouteLines","airportsList","routesList","clearInfo","isPositionValid","Number","isNaN","transformForMapMarker","useMemo","forEach","getAirport","airportId","currentTarget","getAttribute","find","focusOnAirportHandler","airport","airportsIataTo","destinationAirport","route","sourceAirport","reduce","acc","curr","searchContainer","GET_AIRPORTS","GET_ROUTES","getRoutesAction"],"mappings":"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","file":"static/js/4.4bab0d73.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Map_root__2FdYZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Search_root__102jI\",\"searchInput\":\"Search_searchInput__1SmLZ\",\"noResults\":\"Search_noResults__1etpD\",\"resultsWrapper\":\"Search_resultsWrapper__1W-Vo\",\"resultLabel\":\"Search_resultLabel__1jrpo\",\"popupHeader\":\"Search_popupHeader__PsEZV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SearchAirport_root__2CjAk\",\"searchContainer\":\"SearchAirport_searchContainer__2jzFw\",\"map\":\"SearchAirport_map__WeABs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Main_root__zd-uY\"};","export const MAP_CONFIG = {\n  zoom: 5,\n  optimalZoom: 8,\n  minZoom: 3,\n  maxZoom: 18,\n};\n","import React, { FC } from 'react';\nimport { Map, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\nimport { isEmpty } from 'ramda';\nimport clsx from 'clsx';\n\nimport { MAP_CONFIG } from '../../../config/mapConfig';\nimport { IMarker, IPosition } from '../_models/mapModel';\n\nimport styles from './Map.module.scss';\n\ninterface IOwnProps {\n  markers: IMarker[];\n  center: IPosition;\n  zoom?: number;\n  lines?: IPosition[][];\n  className?: string;\n}\n\ntype Props = IOwnProps;\n\nconst LeafMap: FC<Props> = ({ markers, center, className, lines, zoom }) => {\n  const opacityHandler = (lat: number, lng: number): number => {\n    return center.lat === lat && center.lng === lng ? 1 : 0.5;\n  };\n\n  return (\n    <Map\n      center={center}\n      zoom={zoom || MAP_CONFIG.zoom}\n      minZoom={MAP_CONFIG.minZoom}\n      maxZoom={MAP_CONFIG.maxZoom}\n      className={clsx(styles.root, className)}\n    >\n      <TileLayer\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.osm.org/{z}/{x}/{y}.png\"\n      />\n      {!isEmpty(markers) &&\n        markers.map(({ lat, lng, info, id }: IMarker) => (\n          <Marker\n            position={{ lat, lng }}\n            opacity={opacityHandler(lat, lng)}\n            key={id}\n          >\n            <Popup>{info}</Popup>\n          </Marker>\n        ))}\n      {lines &&\n        !isEmpty(lines) &&\n        lines.map((line, index) => <Polyline positions={line} key={index} />)}\n    </Map>\n  );\n};\n\nexport default LeafMap;\n","import { AppState } from '../../../redux/store';\nimport { IMainReducer } from './mainReducers';\n\nexport const mainSelector = (state: AppState): IMainReducer => state.main;\n","import { AppState } from '../../../../redux/store';\nimport { ISearchReducer } from './searchReducers';\n\nexport const searchSelector = (state: AppState): ISearchReducer => state.search;\n","import React, {\n  FC,\n  memo,\n  ChangeEvent,\n  useState,\n  MouseEvent,\n  useEffect,\n} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Input, Card, Label, Popup, Icon } from 'semantic-ui-react';\nimport { isEmpty } from 'ramda';\nimport clsx from 'clsx';\n\nimport { areEqual } from '../../../utils/helpers';\nimport useDebounce from '../../../hooks/useDebounce';\nimport { IAirport } from '../_models/airportModel';\nimport { setSearchAction } from './_redux/searchActions';\nimport { searchSelector } from './_redux/searchSelectors';\n\nimport styles from './Search.module.scss';\n\ninterface IOwnProps {\n  list: any[];\n  searchCondition: string[];\n  onResultClick: (e: MouseEvent, list: IAirport[]) => void;\n  onIconClick: (e: MouseEvent, list: IAirport[]) => void;\n}\n\ntype Props = IOwnProps;\n\nconst Search: FC<Props> = ({\n  list,\n  onResultClick,\n  searchCondition,\n  onIconClick,\n}) => {\n  const dispatch = useDispatch();\n  const { searchResults } = useSelector(searchSelector);\n  const [searchValue, setSearchValue] = useState('');\n  const searchDebounce = useDebounce(searchValue, 800);\n  const searchAvailabilityFlag =\n    searchValue && searchValue.length >= 3 && searchDebounce;\n\n  const onInputChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n    setSearchValue(value || '');\n  };\n\n  const onCardClickHandler = (e: MouseEvent<HTMLAnchorElement>) => {\n    onResultClick(e, list);\n  };\n\n  const onIconClickHandler = (e: MouseEvent<HTMLAnchorElement>) => {\n    e.stopPropagation();\n    onIconClick(e, list);\n  };\n\n  useEffect(() => {\n    let results = [];\n    if (searchAvailabilityFlag) {\n      results = list.filter(item =>\n        searchCondition\n          .map(condition => item[condition] && item[condition].toLowerCase())\n          .join(',')\n          .includes(searchValue.toLowerCase()),\n      );\n    }\n    dispatch(setSearchAction(results));\n  }, [searchValue, list, searchAvailabilityFlag, dispatch]);\n\n  return (\n    <div className={styles.root}>\n      <Input\n        icon=\"search\"\n        placeholder=\"Search airport\"\n        className={styles.searchInput}\n        transparent\n        loading={!searchDebounce && !!searchValue}\n        onChange={onInputChangeHandler}\n      />\n      {!isEmpty(searchResults) && (\n        <div className={styles.resultsWrapper}>\n          <Label\n            className={styles.resultLabel}\n            attached=\"top right\"\n            size=\"tiny\"\n          >\n            {searchResults.length}{' '}\n            {searchResults.length > 1 ? 'results' : 'result'}\n          </Label>\n          {searchResults.map(\n            (\n              { iata, name, country, city, icao, id }: IAirport,\n              index: number,\n            ) => (\n              <Card\n                key={index}\n                header={\n                  <Popup\n                    content=\"Where can I fly from here? Click\"\n                    position=\"top right\"\n                    inverted\n                    basic\n                    trigger={\n                      <div className={clsx('header', styles.popupHeader)}>\n                        {iata}\n                        <span onClick={onIconClickHandler} data-id={id}>\n                          <Icon name=\"globe\" />\n                        </span>\n                      </div>\n                    }\n                  />\n                }\n                meta={icao}\n                description={`${name} / ${city}, ${country}`}\n                data-id={id}\n                onClick={onCardClickHandler}\n              ></Card>\n            ),\n          )}\n          <span>\n            Data from{' '}\n            <a href=\"https://openflights.org/data.html\">OpenFlights</a>\n          </span>\n        </div>\n      )}\n      {isEmpty(searchResults) && searchAvailabilityFlag && (\n        <span className={styles.noResults}>No results</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(Search, areEqual);\n","import { useState, useEffect } from 'react';\n\nexport default function useDebounce(value: any, delay = 300) {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n","import { SET_SEARCH } from './searchTypes';\n\nexport const setSearchAction = (payload: any[], callback?: () => void) => {\n  return {\n    type: SET_SEARCH,\n    payload,\n    callback,\n  };\n};\n","import React, {\n  FC,\n  memo,\n  useMemo,\n  useState,\n  MouseEvent,\n  useEffect,\n} from 'react';\nimport { useSelector } from 'react-redux';\nimport { isEmpty } from 'ramda';\n\nimport { areEqual } from '../../../utils/helpers';\nimport { IAirport } from '../_models/airportModel';\nimport LeafMap from '../Map/Map';\nimport { mainSelector } from '../_redux/mainSelectors';\nimport { searchSelector } from '../Search/_redux/searchSelectors';\nimport { IMarker, IPosition } from '../_models/mapModel';\nimport Search from '../Search/Search';\nimport { MAP_CONFIG } from '../../../config/mapConfig';\nimport { getAllDestinations } from '../_helpers/routesHelpers';\n\nimport styles from './SearchAirport.module.scss';\n\ninterface IOwnProps {}\n\ntype Props = IOwnProps;\n\nconst SearchAirport: FC<Props> = () => {\n  const [mapCenter, setMapCenter] = useState<IPosition>({\n    lat: 51.477928,\n    lng: -0.001545,\n  }); // Greenwich\n  const [zoom, setZoom] = useState(MAP_CONFIG.zoom);\n  const [hubAirport, setHubAirport] = useState<IAirport | null>(null);\n  const [airportsTo, setAirportsTo] = useState<IAirport[]>([]);\n  const [routesLines, setRouteLines] = useState<IPosition[][]>([]);\n\n  const { airportsList, routesList } = useSelector(mainSelector);\n  const { searchResults } = useSelector(searchSelector);\n\n  const searchCondition = ['iata', 'name', 'country', 'city'];\n\n  const clearInfo = () => {\n    setZoom(MAP_CONFIG.zoom);\n    setAirportsTo([]);\n    setRouteLines([]);\n  };\n\n  const isPositionValid = (lat: number, lng: number) => {\n    return !Number.isNaN(lat) && !Number.isNaN(lng);\n  };\n\n  const transformForMapMarker: IMarker[] = useMemo(() => {\n    clearInfo();\n    let markers = [] as IMarker[];\n    searchResults.forEach(({ lat, lng, name, id }: IAirport) => {\n      if (isPositionValid(+lat, +lng))\n        markers = [...markers, { lat: +lat, lng: +lng, info: name, id }];\n    });\n    return markers;\n  }, [searchResults]);\n\n  const getAirport = (e: MouseEvent, list: IAirport[]): IAirport | null => {\n    const airportId =\n      e.currentTarget && e.currentTarget.getAttribute('data-id');\n    const foundAirport = list.find(item => item.id === airportId);\n    return foundAirport || null;\n  };\n\n  const focusOnAirportHandler = (airport: IAirport) => {\n    const { lat, lng } = airport;\n    if (isPositionValid(+lat, +lng)) setMapCenter({ lat: +lat, lng: +lng });\n    clearInfo();\n    setZoom(MAP_CONFIG.optimalZoom);\n  };\n\n  const onResultClickHandler = (e: MouseEvent, list: IAirport[]) => {\n    const airport = getAirport(e, list);\n    if (airport && isPositionValid(+airport.lat, +airport.lng)) {\n      focusOnAirportHandler(airport);\n    }\n  };\n\n  const onIconClickHandler = (e: MouseEvent, list: IAirport[]) => {\n    const airport = getAirport(e, list);\n    if (airport && isPositionValid(+airport.lat, +airport.lng)) {\n      setHubAirport(airport);\n    }\n  };\n\n  useEffect(() => {\n    if (hubAirport) {\n      focusOnAirportHandler(hubAirport);\n      if (!isEmpty(routesList)) {\n        const routesTo = getAllDestinations(hubAirport, routesList);\n        const airportsIataTo = routesTo\n          .map(route => route.sourceAirport)\n          .join(',');\n        setAirportsTo(\n          airportsList.filter(airport => airportsIataTo.includes(airport.iata)),\n        );\n      }\n    }\n  }, [hubAirport]);\n\n  useEffect(() => {\n    if (!isEmpty(airportsTo) && hubAirport) {\n      const { lat, lng } = hubAirport;\n      const lines = airportsTo.reduce((acc: any, curr: IAirport) => {\n        acc = [\n          ...acc,\n          [\n            { lat, lng },\n            { lat: +curr.lat, lng: +curr.lng },\n          ],\n        ];\n        return acc;\n      }, []);\n      setRouteLines(lines);\n    }\n  }, [airportsTo]);\n\n  return (\n    <div className={styles.root}>\n      <LeafMap\n        markers={transformForMapMarker}\n        center={mapCenter}\n        zoom={zoom}\n        className={styles.map}\n        lines={routesLines}\n      />\n      <div className={styles.searchContainer}>\n        <Search\n          list={airportsList}\n          searchCondition={searchCondition}\n          onResultClick={onResultClickHandler}\n          onIconClick={onIconClickHandler}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SearchAirport, areEqual);\n","import { IAirport, IRoute } from '../_models/airportModel';\n\nexport const getAllDestinations = (\n  airport: IAirport,\n  routes: IRoute[],\n): IRoute[] => {\n  return routes.filter(\n    ({ destinationAirport }) => destinationAirport === airport.iata,\n  );\n};\n","import React, { FC, memo, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { areEqual } from '../../utils/helpers';\nimport { getAirportsAction, getRoutesAction } from './_redux/mainActions';\nimport SearchAirport from './SearchAirport/SearchAirport';\n\nimport styles from './Main.module.scss';\n\ninterface IOwnProps {}\n\ntype Props = IOwnProps;\n\nconst Main: FC<Props> = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAirportsAction());\n    dispatch(getRoutesAction());\n  }, [dispatch]);\n\n  return (\n    <div className={styles.root}>\n      <SearchAirport />\n    </div>\n  );\n};\n\nexport default memo(Main, areEqual);\n","import { GET_AIRPORTS, GET_ROUTES } from './mainTypes';\n\nexport const getAirportsAction = (callback?: () => void) => ({\n  type: GET_AIRPORTS,\n  callback,\n});\n\nexport const getRoutesAction = (callback?: () => void) => ({\n  type: GET_ROUTES,\n  callback,\n});\n"],"sourceRoot":""}